[tool.poetry]
name = "content"
version = "0.1.0"
description = "Cortex XSOAR content"
authors = ["Cortex XSOAR"]
license = "MIT"
package-mode = false

[[tool.poetry.source]]
name = "pypi-public"
url = "https://pypi.org/simple/"

[tool.poetry.dependencies]
python = "^3.8,<3.11"
defusedxml = "^0.7.1"

[tool.poetry.group.dev.dependencies]
demisto-sdk = "1.31.4"
requests = "^2.22.0"
pre-commit = "^3.5.0"
dateparser = "^1.1.8"

[tool.poetry.group.linters.dependencies]
mypy = "^0.982"
ruff = "^0.0.264"

[tool.poetry.group.testing.dependencies]
pytest = "^7.1.2"
requests-mock = "^1.9.3"
pytest-mock = "^3.7.0"
freezegun = "^1.1.0"
mock-open = "^1.4.0"

# If mypy requires for a `types-*` package, add it here with `poetry add --group typing <package>`
[tool.poetry.group.typing.dependencies]
types-tqdm = "^4.66.0.2"
types-requests = "2.28.11"
types-mock = "^4.0.15"
types-setuptools = "^69.2.0.20240317"
types-ujson = "^5.6.0.0"
types-decorator = "^5.1.8"
types-pkg-resources = "^0.1.3"
types-toml = "^0.10.8.7"
types-tabulate = "^0.9.0.20240106"
types-pytz = ">=2021.3.6,<2023.0.0"
types-dateparser = "^1.1.4.20240106"
types-python-dateutil = "^2.9.0.20240316"
types-protobuf = "^4.24.0.4"
types-six = "^1.16.21.20240513"
types-paramiko = "2.12.0"
types-PyMySQL = "1.1.0.20240425"
types-markdown = "3.6.0.20240316"
types-PyYAML = "6.0.12.20240311"
types-emoji = "2.1.0.3"

[tool.poetry.group.ci]
optional = true

[tool.poetry.group.ci.dependencies]
google-cloud-bigquery = "^3.2.0"
google-cloud-secret-manager = "^2.13.0"
google-cloud-compute = "^1.19.1"
google-cloud-firestore = "^2.3.4"
blessings = "^1.7"
coloredlogs = "^15.0.1"
pandas = "^1.3.3"
prettytable = "^3.2.0"
pyspellchecker = "^0.6.2"
sendgrid = "^6.6.0"
slack_sdk = "^3.31.0"
timeout_decorator = "^0.5.0"
ujson = "^5.1.0"
yamlordereddictloader = "^0.4.0"
parinx = { git = "https://github.com/npsolve/parinx.git", rev = "6493798ceba8089345d970f71be4a896eb6b081d" }
python-gitlab = "^3.0.0"
PyGithub = "^1.54.1"
ansible-runner = "^2.2.0"
paramiko = "^2.11.0"
scp = "^0.14.5"
humanize = "^4.7.0"
jsonschema = "^4.6.0"
db-dtypes = "^1.0.1"
json5 = "^0.9.10"
tqdm = "^4.66.1"
tabulate = ">=0.8.9,<0.10.0"
jira = "^3.8.0"
junitparser = "^3.1.0"
tenacity = "^8.2.3"
pendulum = "^2.1.2"
retry = "^0.9.2"
Faker = "^15.3.4"


[tool.poetry.group.packwise]
optional = true

[tool.poetry.group.packwise.dependencies]
pygithub = "*"
loguru = "^0.7.2"
pathspec = "^0.12.1"
python-dotenv = "*"

[tool.ruff]
select = [
    "UP015"
]
fix = true
ignore = [
    "E402", # module-import-not-at-top-of-file

    "F403", # undefined-local-with-import-star
    "F405", # undefined-local-with-import-star-usage

    "W605", # invalid-escape-sequence
]
extend-exclude = ["CommonServerPython", "test_data", "conftest.py", "demistomock.py"]

unfixable = [
    "RUF001"  # ambiguous-unicode-character-string
]

line-length = 130
target-version = "py310"
src = [
    "Packs/Base/Scripts/CommonServerPython",
    "Tests/demistomock",
    "Packs/ApiModules/Scripts/*",
]

[tool.ruff.per-file-ignores]
"**/*_test.py" = []
# Ignore any Python update in ApiModules, until we can proprtly determine their desired version.
"**/*ApiModule.py"  = [ "UP" ]
[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
namespace_packages = true
show_error_codes = true
follow_imports = "silent"
pretty = true
allow_redefinition = true
exclude = [
    "test_data",
    "tests_data",
    ".venv",
    ".*_test.py$",
    "test_.*.py",
    "infrastructure_tests",
    "CommonServerPython.py",
    "demistomock.py",
]

[tool.autopep8]
max_line_length = 130

[tool.pytest]
asyncio_mode = "auto"

[tool.coverage.run]
relative_files = true
omit = ["*/test_data/*", "*_test.py", "demistomock.py", "conftest.py", "**/conftest.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
