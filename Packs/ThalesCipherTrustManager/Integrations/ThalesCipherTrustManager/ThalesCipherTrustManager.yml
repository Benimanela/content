category: Authentication & Identity Management
description: Manage Secrets and Protect Sensitive Data through HashiCorp Vault.
commonfields:
  id: CipherTrust
  version: -1
name: CipherTrust
display: Thales CipherTrust Manager
configuration:
- display: server_url
  name: server_url
  type: 0
  required: true
- display: credentials
  name: credentials
  type: 9
  required: true
script:
  commands:
  - deprecated: false
    description: Issues a certificate by signing the provided CSR with the CA. This is typically used to issue server, client or intermediate CA certificates.
    name: ciphertrust-certificate-issue
    arguments:
    - name: ca_id
      isArray: false
      description: An identifier of the issuer CA resource
      required: true
      secret: false
      default: false
    - name: csr
      isArray: false
      description: CSR in PEM format
      required: true
      secret: false
      default: false
    - name: purpose
      isArray: false
      description: 'Purpose of the certificate. Possible values: server, client or ca'
      required: true
      secret: false
      default: false
      predefined:
      - server
      - client
      - ca
      auto: PREDEFINED
    - name: duration
      isArray: false
      description: Duration in days of certificate. Either duration or notAfter date must be specified.
      required: false
      secret: false
      default: false
    - name: name
      isArray: false
      description: A unique name of Certificate, if not provided, will be set to cert-<id>.
      required: false
      secret: false
      default: false
    - name: not_after
      isArray: false
      description: End date of certificate. Either notAfter date or duration must be specified. notAfter overrides duration if both are given.
      required: false
      secret: false
      default: false
    - name: not_before
      isArray: false
      description: Start date of certificate. ISO 8601 format for notBefore date. Either duration or notAfter date must be specified. If duration is given without notBefore date, certificate is issued starting from server's current time for the specified duration.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Returns a list of certificates issued by the specified CA. The results can be filtered, using the query parameters.
    name: ciphertrust-certificate-list
    arguments:
    - name: ca_id
      isArray: false
      description: An identifier of the issuer CA resource
      required: true
      secret: false
      default: false
    - name: subject
      isArray: false
      description: Filter by subject
      required: false
      secret: false
      default: false
    - name: issuer
      isArray: false
      description: Filter by issuer
      required: false
      secret: false
      default: false
    - name: cert
      isArray: false
      description: Filter by cert
      required: false
      secret: false
      default: false
    - name: id
      isArray: false
      description: Filter by id or URI
      required: false
      secret: false
      default: false
    - name: page
      isArray: false
      description: Page to return.
      required: false
      secret: false
      default: false
    - name: page_size
      isArray: false
      description: Number of entries per page. Defaults to 2000 (in case only page was provided). Maximum entries per page is 2000
      required: false
      secret: false
      default: false
    - name: limit
      isArray: false
      description: The max number of entries to return. Defaults to 50
      required: false
      secret: false
      default: false
      defaultValue: 50
    outputs: []
  - deprecated: false
    description: Certificate can be resumed only if it is revoked with reason certificatehold.
    name: ciphertrust-certificate-resume
    arguments:
    - name: ca_id
      isArray: false
      description: An identifier of the issuer CA resource
      required: true
      secret: false
      default: false
    - name: cert_id
      isArray: false
      description: The identifier of the certificate resource
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Revoke certificate with a given specific reason.
    name: ciphertrust-certificate-revoke
    arguments:
    - name: ca_id
      isArray: false
      description: An identifier of the issuer CA resource
      required: true
      secret: false
      default: false
    - name: cert_id
      isArray: false
      description: The identifier of the certificate resource
      required: true
      secret: false
      default: false
    - name: reason
      isArray: false
      description: 'Specify one of the reason. Reasons to revoke a certificate according to RFC 5280 '
      required: true
      secret: false
      default: false
      predefined:
      - unspecified
      - keyCompromise
      - cACompromise
      - affiliationChanged
      - superseded
      - cessationOfOperation
      - certificateHold
      - removeFromCRL
      - privilegeWithdrawn
      - aACompromise
      auto: PREDEFINED
    outputs: []
  - deprecated: false
    description: Deletes an external CA certificate.
    name: ciphertrust-external-certificate-delete
    arguments:
    - name: external_ca_id
      isArray: false
      description: The identifier of the certificate resource
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Returns a list of external CA certificates. The results can be filtered, using the query parameters.
    name: ciphertrust-external-certificate-list
    arguments:
    - name: subject
      isArray: false
      description: Filter by subject
      required: false
      secret: false
      default: false
    - name: issuer
      isArray: false
      description: Filter by issuer
      required: false
      secret: false
      default: false
    - name: serial_number
      isArray: false
      description: Filter by serial number
      required: false
      secret: false
      default: false
    - name: cert
      isArray: false
      description: Filter by cert
      required: false
      secret: false
      default: false
    - name: page
      isArray: false
      description: Page to return.
      required: false
      secret: false
      default: false
    - name: page_size
      isArray: false
      description: Number of entries per page. Defaults to 2000 (in case only page was provided). Maximum entries per page is 2000
      required: false
      secret: false
      default: false
    - name: limit
      isArray: false
      description: The max number of entries to return. Defaults to 50
      required: false
      secret: false
      default: false
      defaultValue: 50
    outputs: []
  - deprecated: false
    description: Update an external CA.
    name: ciphertrust-external-certificate-update
    arguments:
    - name: external_ca_id
      isArray: false
      description: The identifier of the certificate resource
      required: true
      secret: false
      default: false
    - name: allow_client_authentication
      isArray: false
      description: If set to true, the certificates signed by the specified CA can be used for client authentication.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: allow_user_authentication
      isArray: false
      description: If set to true, the certificates signed by the specified CA can be used for user authentication.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    outputs: []
  - deprecated: false
    description: Uploads an external CA certificate. These certificates can later be trusted by services inside the system for verification of client certificates. The uploaded certificate must have "CA:TRUE" as part of the "X509v3 Basic Constraints" to be accepted.
    name: ciphertrust-external-certificate-upload
    arguments:
    - name: cert
      isArray: false
      description: External CA certificate in PEM format
      required: true
      secret: false
      default: false
    - name: name
      isArray: false
      description: A unique name of CA, if not provided, will be set to externalca-<id>.
      required: false
      secret: false
      default: false
    - name: parent
      isArray: false
      description: URI reference to a parent external CA certificate. This information can be used to build a certificate hierarchy.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-group-create
    arguments:
    - name: name
      isArray: false
      description: Name of the group.
      required: true
      secret: false
      default: false
    - name: description
      isArray: false
      description: description of the group.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-group-delete
    arguments:
    - name: name
      isArray: false
      description: Name of the group
      required: true
      secret: false
      default: false
    - name: force
      isArray: false
      description: When set to true, groupmaps within this group will be deleted
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Returns a list of group resources. Command arguments can be used to filter the results.Groups can be filtered for user or client membership. Connection filter applies only to user group membership and NOT to clients.
    name: ciphertrust-group-list
    arguments:
    - name: group_name
      isArray: false
      description: Filter by group name.
      required: false
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: Filter by user membership. Using the username 'nil' will return groups with no members. Accepts only user id. Using '-' at the beginning of user_id will return groups that the user is not part of.
      required: false
      secret: false
      default: false
    - name: connection
      isArray: false
      description: Filter by connection name or ID.
      required: false
      secret: false
      default: false
    - name: client_id
      isArray: false
      description: Filter by client membership. Using the client name 'nil' will return groups with no members. Using '-' at the beginning of client id will return groups that the client is not part of.
      required: false
      secret: false
      default: false
    - name: page
      isArray: false
      description: Page to return.
      required: false
      secret: false
      default: false
    - name: page_size
      isArray: false
      description: Number of entries per page. Defaults to 2000 (in case only page was provided). Maximum entries per page is 2000
      required: false
      secret: false
      default: false
    - name: limit
      isArray: false
      description: The max number of entries to return. Defaults to 50
      required: false
      secret: false
      default: false
      defaultValue: 50
    outputs:
    - contextPath: CipherTrust.Group.limit
      description: The max number of records returned. Equivalent to 'limit' in SQL.
      type: Number
    - contextPath: CipherTrust.Group.skip
      description: The index of the first record returned. Equivalent to 'offset' in SQL.
      type: Number
    - contextPath: CipherTrust.Group.total
      description: The total records matching the query.
      type: Number
    - contextPath: CipherTrust.Group.messages
      description: An optional list of warning messages, usually used to note when unsupported query parameters were ignored.
      type: Unknown
    - contextPath: CipherTrust.Group.resources.name
      description: name of the group
      type: String
    - contextPath: CipherTrust.Group.resources.created_at
      description: The time the group was created.
      type: Date
    - contextPath: CipherTrust.Group.resources.updated_at
      description: The time the group was last updated.
      type: Date
    - contextPath: CipherTrust.Group.resources.user_metadata
      description: A schema-less object, which can be used by applications to store information about the resource. user_metadata is typically used by applications to store information about the resource which the end-users are allowed to modify, such as user preferences.
      type: Unknown
    - contextPath: CipherTrust.Group.resources.app_metadata
      description: A schema-less object, which can be used by applications to store information about the resource. app_metadata is typically used by applications to store information which the end-users are not themselves allowed to change, like group membership or security roles.
      type: Unknown
    - contextPath: CipherTrust.Group.resources.client_metadata
      description: A schema-less object, which can be used by applications to store information about the resource. client_metadata is typically used by applications to store information about the resource, such as client preferences.
      type: Unknown
    - contextPath: CipherTrust.Group.resources.description
      description: description of the group
      type: String
    - contextPath: CipherTrust.Group.resources.users_count
      description: It returns the total user count associated with the group
      type: Number
  - deprecated: false
    description: ''
    name: ciphertrust-group-update
    arguments:
    - name: group_name
      isArray: false
      description: Name of the group.
      required: true
      secret: false
      default: false
    - name: description
      isArray: false
      description: description of the group.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Creates a pending local CA. This operation returns a CSR that either can be self-signed by calling local-cas/{id}/self-sign or signed by another CA and installed by calling local-cas/{id}/install. A local CA keeps the corresponding private key inside the system and can issue certificates for clients, servers or intermediate CAs. The local CA can also be trusted by services inside the system for verification of client certificates.
    name: ciphertrust-local-ca-create
    arguments:
    - name: cn
      isArray: false
      description: Common name
      required: true
      secret: false
      default: false
    - name: algorithm
      isArray: false
      description: RSA or ECDSA (default) algorithms are supported. Signature algorithm (SHA512WithRSA, SHA384WithRSA, SHA256WithRSA, SHA1WithRSA, ECDSAWithSHA512, ECDSAWithSHA384, ECDSAWithSHA256) is selected based on the algorithm and size.
      required: false
      secret: false
      default: false
    - name: copy_from_ca
      isArray: false
      description: ID of any Local CA. If given, the csr properties are copied from the given CA.
      required: false
      secret: false
      default: false
    - name: dns_names
      isArray: true
      description: Subject Alternative Names (SAN) values
      required: false
      secret: false
      default: false
    - name: email
      isArray: true
      description: E-mail addresses
      required: false
      secret: false
      default: false
    - name: ip
      isArray: true
      description: IP addresses
      required: false
      secret: false
      default: false
    - name: name
      isArray: false
      description: A unique name of CA, if not provided, will be set to localca-<id>.
      required: false
      secret: false
      default: false
    - name: name_fields_raw_json
      isArray: true
      description: Name fields are "O=organization, OU=organizational unit, L=location, ST=state/province, C=country". Fields can be duplicated if present in different objects. O=organization, OU=organizational unit, L=location, ST=state/province, C=country
      required: false
      secret: false
      default: false
    - name: name_fields_json_entry_id
      isArray: false
      description: Entry Id of the file that contains JSON representation of the name_fields_raw_json
      required: false
      secret: false
      default: false
    - name: size
      isArray: false
      description: 'Key size. RSA: 1024 - 4096 (default: 2048), ECDSA: 256 (default), 384, 521'
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Deletes a local CA given the local CA's ID.
    name: ciphertrust-local-ca-delete
    arguments:
    - name: local_ca_id
      isArray: false
      description: local CA ID
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Installs a certificate signed by another CA to act as a local CA. Issuers can be both local or external CA. Typically used for intermediate CAs.The CA certificate must match the earlier created CA CSR, have "CA:TRUE" as part of the "X509v3 Basic Constraints", and have "Certificate Signing" as part of "X509v3 Key Usage" in order to be accepted.
    name: ciphertrust-local-ca-install
    arguments:
    - name: local_ca_id
      isArray: false
      description: local CA ID
      required: true
      secret: false
      default: false
    - name: cert
      isArray: false
      description: Signed certificate in PEM format to install as a local CA
      required: true
      secret: false
      default: false
    - name: partent_id
      isArray: false
      description: An identifier of the parent resource. The resource can be either a local or an external CA. The identifier can be either the ID (a UUIDv4) or the URI.
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Returns a list of local CA certificates. The results can be filtered, using the query parameters.
    name: ciphertrust-local-ca-list
    arguments:
    - name: subject
      isArray: false
      description: Filter by subject
      required: false
      secret: false
      default: false
    - name: local_ca_id
      isArray: false
      description: Filter by local CA ID
      required: false
      secret: false
      default: false
    - name: chained
      isArray: false
      description: When set to ‘true’ the full CA chain is returned with the certificate
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: issuer
      isArray: false
      description: Filter by issuer
      required: false
      secret: false
      default: false
    - name: state
      isArray: false
      description: Filter by state
      required: false
      secret: false
      default: false
      predefined:
      - pending
      - active
      auto: PREDEFINED
    - name: cert
      isArray: false
      description: Filter by cert
      required: false
      secret: false
      default: false
    - name: page
      isArray: false
      description: Page to return.
      required: false
      secret: false
      default: false
    - name: page_size
      isArray: false
      description: Number of entries per page. Defaults to 2000 (in case only page was provided). Maximum entries per page is 2000
      required: false
      secret: false
      default: false
    - name: limit
      isArray: false
      description: The max number of entries to return. Defaults to 50
      required: false
      secret: false
      default: false
      defaultValue: 50
    outputs: []
  - deprecated: false
    description: Self-sign a local CA certificate. This is used to create a root CA. Either duration or notAfter date must be specified. If both notAfter and duration are given, then notAfter date takes precedence over duration. If duration is given without notBefore date, certificate is issued starting from server's current time for the specified duration.
    name: ciphertrust-local-ca-self-sign
    arguments:
    - name: local_ca_id
      isArray: false
      description: local CA ID
      required: true
      secret: false
      default: false
    - name: duration
      isArray: false
      description: Duration in days of certificate. Either duration or notAfter date must be specified.
      required: false
      secret: false
      default: false
    - name: not_after
      isArray: false
      description: End date of certificate. Either notAfter date or duration must be specified. notAfter overrides duration if both are given.
      required: false
      secret: false
      default: false
    - name: not_before
      isArray: false
      description: Start date of certificate. ISO 8601 format
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-local-ca-update
    arguments:
    - name: local_ca_id
      isArray: false
      description: local CA ID
      required: true
      secret: false
      default: false
    - name: allow_client_authentication
      isArray: false
      description: If set to true, the certificates signed by the specified CA can be used for client authentication.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: allow_user_authentication
      isArray: false
      description: If set to true, the certificates signed by the specified CA can be used for user authentication.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    outputs: []
  - deprecated: false
    description: Deletes a local certificate.
    name: ciphertrust-local-certificate-delete
    arguments:
    - name: ca_id
      isArray: false
      description: An identifier of the issuer CA resource
      required: true
      secret: false
      default: false
    - name: local_ca_id
      isArray: false
      description: The identifier of the certificate resource
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Tests API connectivity and authentication
    name: test_module
    arguments: []
    outputs: []
  - deprecated: false
    description: Create a new user in a domain(including root), or add an existing domain user to a sub-domain. Users are always created in the local, internal user database, but might have references to external identity providers.
    name: ciphertrust-user-create
    arguments:
    - name: name
      isArray: false
      description: User’s name
      required: false
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: user_id
      required: false
      secret: false
      default: false
    - name: username
      isArray: false
      description: username
      required: false
      secret: false
      default: false
    - name: password
      isArray: false
      description: password
      required: false
      secret: false
      default: false
    - name: email
      isArray: false
      description: Users email
      required: false
      secret: false
      default: false
    - name: allowed_auth_methods
      isArray: true
      description: Filter by the loginauthentication method allowed to the users. It is a list of values. A []can bespecified to get users to whom no authentication method is allowed.
      required: false
      secret: false
      default: false
      predefined:
      - password
      - user_certificate
      - password_with_user_certificate
      - empty
      auto: PREDEFINED
    - name: allowed_client_types
      isArray: true
      description: allowed_client_types
      required: false
      secret: false
      default: false
      predefined:
      - unregistered
      - public
      - confidential
      auto: PREDEFINED
    - name: certificate_subject_dn
      isArray: false
      description: The Distinguished Name of the user in certificate
      required: false
      secret: false
      default: false
    - name: connection
      isArray: false
      description: Can be the name of a connection or "local_account" for a local user
      required: false
      secret: false
      default: false
      defaultValue: local_account
    - name: expires_at
      isArray: false
      description: The expires_at field is applicable only for local user account. Only members of the 'admin' and 'User Admins' groups can add expiration to an existing local user account or modify the expiration date. Once the expires_at date is reached, the user account gets disabled and the user is not able to perform any actions. Setting the expires_at field to empty, removes the expiration date of the user account.The supported date-time format is 2025-03-02T06:13:27.71402Z
      required: false
      secret: false
      default: false
    - name: is_domain_user
      isArray: false
      description: This flag can be used to create the user in a non-root domain where user management is allowed.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: prevent_ui_login
      isArray: false
      description: 'If true, user is not allowed to login from Web UI. '
      required: false
      secret: false
      default: false
      defaultValue: 'false'
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: password_change_required
      isArray: false
      description: Password change required flag. If set to true, user will be required to change their password on next successful login.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: password_policy
      isArray: false
      description: The password policy applies only to local user accounts and overrides the global password policy. By default, the global password policy is applied to the users.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Deletes a user given the user's user-id. If the current user is logged into a sub-domain, the user is deleted from that sub-domain. If the current user is logged into the root domain, the user is deleted from all domains it belongs to.
    name: ciphertrust-user-delete
    arguments:
    - name: user_id
      isArray: false
      description: user_id
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Change the current user's password. Can only be used to change the password of the currently authenticated user. The user will not be able to change their password to the same password.
    name: ciphertrust-user-password-change
    arguments:
    - name: new_password
      isArray: false
      description: new_password
      required: true
      secret: false
      default: false
    - name: password
      isArray: false
      description: password
      required: true
      secret: false
      default: false
    - name: username
      isArray: false
      description: The login name of the current user.
      required: true
      secret: false
      default: false
    - name: auth_domain
      isArray: false
      description: The domain where user needs to be authenticated. This is the domain where user is created. Defaults to the root domain.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-user-to-group-add
    arguments:
    - name: group_name
      isArray: false
      description: Name of the group.By default it will be added to the Key Users Group.
      required: true
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: User id. Can be retrieved by using the command ciphertrust-users-list
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-user-to-group-remove
    arguments:
    - name: group_name
      isArray: false
      description: Name of the group.By default it will be added to the Key Users Group.
      required: true
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: User id. Can be retrieved by using the command ciphertrust-users-list
      required: true
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: Change the properties of a user. For instance the name, the password, or metadata. Permissions would normally restrict this route to users with admin privileges. Non admin users wishing to change their own passwords should use the change password route. The user will not be able to change their password to the same password.
    name: ciphertrust-user-update
    arguments:
    - name: name
      isArray: false
      description: User’s name
      required: false
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: user_id
      required: true
      secret: false
      default: false
    - name: username
      isArray: false
      description: username
      required: false
      secret: false
      default: false
    - name: password
      isArray: false
      description: The password used to secure the user's account.
      required: false
      secret: false
      default: false
    - name: email
      isArray: false
      description: Users email
      required: false
      secret: false
      default: false
    - name: password_change_required
      isArray: false
      description: Password change required flag. If set to true, user will be required to change their password on next successful login.
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: allowed_auth_methods
      isArray: true
      description: Filter by the loginauthentication method allowed to the users. It is a list of values. A []can bespecified to get users to whom no authentication method is allowed.
      required: false
      secret: false
      default: false
      predefined:
      - password
      - user_certificate
      - password_with_user_certificate
      - empty
      auto: PREDEFINED
    - name: allowed_client_types
      isArray: true
      description: allowed_client_types
      required: false
      secret: false
      default: false
      predefined:
      - unregistered
      - public
      - confidential
      auto: PREDEFINED
    - name: certificate_subject_dn
      isArray: false
      description: The Distinguished Name of the user in certificate
      required: false
      secret: false
      default: false
    - name: expires_at
      isArray: false
      description: The expires_at field is applicable only for local user account. Only members of the 'admin' and 'User Admins' groups can add expiration to an existing local user account or modify the expiration date. Once the expires_at date is reached, the user account gets disabled and the user is not able to perform any actions. Setting the expires_at field to empty, removes the expiration date of the user account.The supported date-time format is 2025-03-02T06:13:27.71402Z
      required: false
      secret: false
      default: false
    - name: failed_logins_count
      isArray: false
      description: Set it to 0 to unlock a locked user account.
      required: false
      secret: false
      default: false
    - name: prevent_ui_login
      isArray: false
      description: If true, user is not allowed to login from Web UI.
      required: false
      secret: false
      default: false
      defaultValue: 'false'
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: password_policy
      isArray: false
      description: The password policy applies only to local user accounts and overrides the global password policy. By default, the global password policy is applied to the users.
      required: false
      secret: false
      default: false
    outputs: []
  - deprecated: false
    description: ''
    name: ciphertrust-users-list
    arguments:
    - name: name
      isArray: false
      description: User’s name
      required: false
      secret: false
      default: false
    - name: user_id
      isArray: false
      description: If provided, get the user with the specified id
      required: false
      secret: false
      default: false
    - name: username
      isArray: false
      description: username
      required: false
      secret: false
      default: false
    - name: email
      isArray: false
      description: User’s email
      required: false
      secret: false
      default: false
    - name: groups
      isArray: true
      description: Filter by users in the given group name. Provide multiple groups  to get users in all of those groups. Using nil as the group name will return users that are not part of any group.
      required: false
      secret: false
      default: false
    - name: exclude_groups
      isArray: true
      description: User associated with certain group will be excluded
      required: false
      secret: false
      default: false
    - name: auth_domain_name
      isArray: false
      description: Filter by user’s auth domain
      required: false
      secret: false
      default: false
    - name: account_expired
      isArray: false
      description: Filter the expired users (Boolean)
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: allowed_auth_methods
      isArray: true
      description: Filter by the loginauthentication method allowed to the users. It is a list of values. A []can bespecified to get users to whom no authentication method is allowed.
      required: false
      secret: false
      default: false
      predefined:
      - password
      - user_certificate
      - password_with_user_certificate
      - empty
      auto: PREDEFINED
    - name: allowed_client_types
      isArray: true
      description: allowed_client_types
      required: false
      secret: false
      default: false
      predefined:
      - unregistered
      - public
      - confidential
      auto: PREDEFINED
    - name: password_policy
      isArray: false
      description: Filter based on assigned password policy
      required: false
      secret: false
      default: false
    - name: return_groups
      isArray: false
      description: If set to ‘true’ it will return the group’s name in which user is associated, Boolean
      required: false
      secret: false
      default: false
      predefined:
      - 'true'
      - 'false'
      auto: PREDEFINED
    - name: page
      isArray: false
      description: Page to return.
      required: false
      secret: false
      default: false
    - name: page_size
      isArray: false
      description: Number of entries per page. Defaults to 2000 (in case only page was provided). Maximum entries per page is 2000
      required: false
      secret: false
      default: false
    - name: limit
      isArray: false
      description: The max number of entries to return. Defaults to 50
      required: false
      secret: false
      default: false
      defaultValue: 50
    outputs: []
  script: '-'
  type: python
  subtype: python3
  dockerimage: demisto/python3:3.10.13.86272
  feed: false
  isfetch: true
  runonce: false
  longRunning: false
  longRunningPort: false
fromversion: 6.0.0
tests:
- No tests
